<%- include('../layouts/boilerplate', { title: '' , body: '' }) %>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script>
    const allItems = <%- typeof items !== 'undefined' ? JSON.stringify(items) : '[]' %>;
    const allCategories = <%- typeof categories !== 'undefined' ? JSON.stringify(categories) : '[]' %>;
    const allitemsCompanies = <%- typeof itemsCompanies !== 'undefined' ? JSON.stringify(itemsCompanies) : '[]' %>;
</script>
    <style>
        #compositionModal .modal-body {
            min-height: 400px;
            /* Ensures modal stays the same size */
            max-height: 500px;
            /* Limits height */
            overflow-y: auto;
            /* Allows scrolling */
        }

        .card {
            margin-bottom: 20px;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
        }

        .table th,
        .table td {
            border: 1px solid #ddd;
            padding: 2px;
            text-align: left;
            white-space: nowrap;
        }

        .table td{
            font-size: 15px
        }

        .table th {
            background-color: #f2f2f2;
        }

        .searchClass strong {
            display: block;
            white-space: nowrap;
            overflow: hidden;
            /* Ensures long names are truncated with "..." */
        }

        .searchClass small {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            display: block;
            max-width: 200px;
        }
    </style>

    <div class="container-fluid mt-4 wow-form">
        <div class="row">
            <div class="col">
                <!-- Add Item Form -->
                <div class="card mt-4 shadow-lg p-4 animate__animated animate__fadeInUp">
                    <h1 style="text-align: center;text-decoration: underline;">Create Items</h1>
                    <div class="card-body">
                        <form action="/items" method="post" class="wow-form">
                            <div class="form-group row">
                                <div class="col">
                                    <label for="name">Name<i style="color: red;">*</i></label>
                                    <input type="text" class="form-control" id="searchValue" name="name"
                                        placeholder="Enter item name"
                                        autocomplete="off" autofocus required>
                                </div>
                                <div class="col-3">
                                    <label for="hscode">HSN</label>
                                    <input type="number" class="form-control" id="hscode" name="hscode" placeholder=""
                                        autocomplete="off">
                                </div>
                                <div class="col-3">
                                    <label for="itemsCompany">Company <i style="color: red;">*</i></label>
                                    <select class="form-control" id="itemsCompany" name="itemsCompany" required
                                        onfocus="selectValue(this)">
                                        <% if (itemsCompanies && itemsCompanies.length> 0) { %>
                                            <option value="" disabled selected>Select company</option>
                                            <% itemsCompanies.forEach(company=> { %>
                                                <option value="<%= company._id %>">
                                                    <%= company.name %>
                                                </option>
                                                <% }); %>
                                                    <% } else { %>
                                                        <option disabled>No company available</option>
                                                        <% } %>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row">
                                     <div class="col-3">
                                    <label for="category">Category <i style="color: red;">*</i></label>
                                    <select class="form-control" id="category" name="category" required
                                        onfocus="selectValue(this)">
                                        <% if (categories && categories.length> 0) { %>
                                            <option value="" disabled selected>Select category</option>
                                            <% categories.forEach(category=> { %>
                                                <option value="<%= category._id %>">
                                                    <%= category.name %>
                                                </option>
                                                <% }); %>
                                                    <% } else { %>
                                                        <option disabled>No categories available</option>
                                                        <% } %>
                                    </select>
                                </div>
                            <div class="col-9">
                                <label for="composition" class="form-label">Composition</label>
                                <textarea class="form-control" id="composition" name="composition" rows="1"
                                    placeholder="Press F6 to add compositions" onkeydown="handleCompositionInputKeydown(event)"></textarea>
                                <input type="hidden" id="compositionIds" name="compositionIds">
                            </div>
                            </div>
                            <div class="form-group row">
                                <div class="col">
                                    <label for="mainUnit">Main Unit <i style="color: red;">*</i></label>
                                    <select class="form-control" id="mainUnit" name="mainUnit"
                                        onfocus="selectValue(this)" required>
                                        <% if (mainUnits && mainUnits.length> 0) { %>
                                            <option value="" disabled selected>Select Main Unit</option>
                                            <% mainUnits.forEach(mainUnit=> { %>
                                                <option value="<%= mainUnit._id %>">
                                                    <%= mainUnit.name %>
                                                </option>
                                                <% }); %>
                                                    <% } else { %>
                                                        <option disabled>No units available</option>
                                                        <% } %>
                                    </select>
                                </div>
                                <div class="col">
                                    <label for="WSUnit">WS Unit</label>
                                    <input type="number" id="WSUnit" name="WSUnit" class="form-control" autocomplete="off">
                                </div>
                                <div class="col">
                                    <label for="unit">Unit <i style="color: red;">*</i></label>
                                    <select class="form-control" id="unit" name="unit" onfocus="selectValue(this)"
                                        required>
                                        <% if (units && units.length> 0) { %>
                                            <option value="" disabled selected>Select Unit</option>
                                            <% units.forEach(unit=> { %>
                                                <option value="<%= unit._id %>">
                                                    <%= unit.name %>
                                                </option>
                                                <% }); %>
                                                    <% } else { %>
                                                        <option disabled>No units available</option>
                                                        <% } %>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row">
                                      <div class="col">
                                    <label for="vatStatus">VAT<i style="color: red;">*</i></label>
                                    <select class="form-control" id="vatStatus" name="vatStatus"
                                        onfocus="selectValue(this)" required>
                                        <option value="" disabled selected>Select Vat</option>
                                        <% if (vatEnabled) {%>
                                            <option value="vatable">Vatable</option>
                                            <%}%>
                                                <option value="vatExempt">VAT Exempt</option>
                                    </select>
                                </div>
                                <div class="col">
                                    <label for="reorderLevel">Re-Order(Qty)</label>
                                    <input type="number" class="form-control" id="reorderLevel" name="reorderLevel"
                                        value="10" aria-selected="true" onfocus="selectValue(this)" autocomplete="off">
                                </div>
                                <div class="col">
                                    <label for="price">Sales Price</label>
                                    <input type="number" class="form-control" id="price" name="price" step="0.01" autocomplete="off">
                                </div>
                                </div>
                                <div class="form-group row">
                                <div class="col">
                                    <label for="puPrice">Purchase Price</label>
                                    <input type="number" class="form-control" id="puPrice" name="puPrice" step="any"
                                        oninput="calculateTotalOpeningStockBalance()" autocomplete="off">
                                </div>
                                <div class="col">
                                    <label for="openingStock">Op. Stock</label>
                                    <input type="number" class="form-control" id="openingStock" name="openingStock"
                                        oninput="calculateTotalOpeningStockBalance()" autocomplete="off">
                                </div>
                                <div class="col">
                                    <label for="openingStockBalance">Op. Stock Value</label>
                                    <input type="number" class="form-control" id="openingStockBalance"
                                        name="openingStockBalance" value="0.00" step="any" onfocus="selectValue(this)" autocomplete="off">
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary" id="saveItem">Add Item</button>
                            <i>To Save Press Alt+S</i>
                        </form>
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="card mt-4 shadow-lg p-4 animate__animated animate__fadeInUp" style="height: 600px;">
                    <h1 style="text-align: center;text-decoration: underline;">Existing Items</h1>
                    <!--print buttons-->
                    <div class="row">
                        <div class="col-2">
                            <button id="backButton" class="back-button">
                                <span class="icon">←</span> Back
                            </button>
                        </div>
                        <!-- <div class="col-1">
                            <div class="btn btn-primary" onclick="printItems()"><i class="bi bi-printer"></i></div>
                        </div> -->
                        <!-- Update the print button to open the modal -->
<div class="col-1">
    <div class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#printOptionsModal">
        <i class="bi bi-printer"></i>
    </div>
</div>
                        <div class="col">
                            <!-- Search Form -->
                            <form class="mb-4">
                                <div class="form-group">
                                    <input type="text" class="form-control" id="searchInput"
                                        placeholder="Search items by name..." autocomplete="off">
                                </div>
                            </form>
                        </div>
                    </div>
                    <div style="max-height: 400px; overflow-y: auto;">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Description of Goods</th>
                                    <th>Company</th>
                                    <th>Category</th>
                                    <th>Stock</th>
                                    <th>Unit</th>
                                    <th>Vat</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="itemsList">
                                <% if (items && items.length> 0) { %>
                                    <% items.sort((a, b)=> a.name.localeCompare(b.name)); %>
                                        <!-- Sorting items alphabetically -->
                                        <% items.forEach((item, index)=> { %>
                                            <tr class="searchClass">
                                                <td><strong>
                                                        <%=index +1 %>. <%= item.name %> 
<span class="badge <%= item.status === 'active' ? 'bg-success' : 'bg-danger' %>">
                                    <%= item.status %>
                                </span>                                                    </strong></td>
                                 <td><small><b>
                                                            <%= item.itemsCompany? item.itemsCompany.name: '' %>
                                                        </b></small></td>
                                                <td><small><b>
                                                            <%= item.category.name %>
                                                        </b></small></td>
                                                <td><small>
                                                        <%= item.stockEntries ? item.stockEntries.reduce((acc, entry)=>
                                                            acc
                                                            +
                                                            entry.quantity, 0) : 0
                                                            %>
                                                    </small></td>
                                                <td><span>
                                                        <%= item.unit.name %>
                                                    </span></td>
                                                <td><span
                                                        class="badge <%= item.vatStatus === 'vatable' ? 'badge-success' : 'badge-warning' %>">
                                                        <%= item.vatStatus==='vatable' ? '13%' : 'Exempt' %>
                                                    </span></td>
                                                <td>
                                                    <a href="/items/<%= item._id %>"><button class="btn-sm btn-info"><i
                                                                class="fas fa-eye"></i></button></a>
                                                                
                                                    <button class="btn btn-sm btn-warning" onclick="editItem('<%= item._id %>', '<%= item.name %>','<%= item.hscode %>', '<%= item.category._id %>', 
                                                    '<%= item.itemsCompany._id %>',
                                                    '<%= item.composition ? item.composition.map(c => c.name).join(", ") : "" %>',
        '<%= item.composition ? item.composition.map(c => c._id).join(",") : "" %>',
                                    '<%=item.mainUnit._id%>','<%=item.WSUnit%>','<%= item.unit._id %>','<%= item.vatStatus %>','<%= item.reorderLevel %>', '<%= item.price %>','<%= item.puPrice %>',
                                     '<%= item.openingStock %>','<%= item.openingStockBalance %>',)"><i
                                                            class="fas fa-edit"></i></button>
                                                    <form action="/items/<%= item._id %>?_method=DELETE" method="post"
                                                        class="d-inline">
                                                        <button type="submit" class="btn btn-sm btn-danger"><i
                                                                class="fas fa-trash"></i></button>
                                                    </form>

                                                    <!-- Add the Select button -->
                                                    <button class="btn btn-sm btn-success" onclick="selectItem(
                                                        '<%= item.name %>',
                                                        '<%= item.hscode %>', 
                                                        '<%= item.category._id %>',
                                                        '<%= item.itemsCompany._id %>',
                                                        '<%= item.composition ? item.composition.map(c => c.name).join(", ") : "" %>',
                                                        '<%= item.composition ? item.composition.map(c => c._id).join(",") : "" %>', 
                                                        '<%= item.mainUnit._id%>',
                                                        '<%= item.WSUnit%>',
                                                        '<%= item.unit._id %>',
                                                        '<%= item.vatStatus %>',
                                                        '<%= item.reorderLevel %>', 
                                                        '<%= item.price %>',
                                                        '<%= item.puPrice %>',
                                                        '<%= item.openingStock %>',
                                                        '<%= item.openingStockBalance %>',
                                                        )"><i class="fas fa-check"></i></button>
                                                </td>
                                            </tr>
                                            <% }); %>
                                                <% } else { %>
                                                    <tr>
                                                        <td colspan="8">No items available</td>
                                                    </tr>
                                                    <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>


            <!-- Edit Item Modal -->
            <div class="modal fade" id="editItemModal" tabindex="-1" aria-labelledby="editItemModalLabel"
                aria-hidden="true">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editItemModalLabel">Edit Item</h5>
                            <button type="button" class="close text-danger" data-bs-dismiss="modal"><span
                                    aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <form id="editItemForm" method="post">

                                <div class="form-group row">
                                    <div class="col">
                                        <label for="editName">Name<i style="color: red;">*</i></label>
                                        <input type="text" class="form-control" id="editName" name="name" autofocus
                                            autocomplete="off" onfocus="selectValue(this)" required>
                                    </div>
                                    <div class="col">
                                        <label for="editHscode">HSN</label>
                                        <input type="number" class="form-control" id="editHscode" name="hscode"
                                            autofocus autocomplete="off" onfocus="selectValue(this)">
                                    </div>
                                    <div class="col">
                                        <label for="editItemsCompany">Company<i style="color: red;">*</i></label>
                                        <select class="form-control" id="editItemsCompany" name="itemsCompany"
                                            onfocus="selectValue(this)" required>
                                            <% if (itemsCompanies && itemsCompanies.length> 0) { %>
                                                <% itemsCompanies.forEach(itemsCompany=> { %>
                                                    <option value="<%= itemsCompany._id %>">
                                                        <%= itemsCompany.name %>
                                                    </option>
                                                    <% }); %>
                                                        <% } else { %>
                                                            <option disabled>No companies available</option>
                                                            <% } %>
                                        </select>
                                    </div>
                                    <div class="col">
                                        <label for="editCategory">Category<i style="color: red;">*</i></label>
                                        <select class="form-control" id="editCategory" name="category"
                                            onfocus="selectValue(this)" required>
                                            <% if (categories && categories.length> 0) { %>
                                                <% categories.forEach(category=> { %>
                                                    <option value="<%= category._id %>">
                                                        <%= category.name %>
                                                    </option>
                                                    <% }); %>
                                                        <% } else { %>
                                                            <option disabled>No categories available</option>
                                                            <% } %>
                                        </select>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="editComposition" class="form-label">Composition</label>
                                    <textarea class="form-control" id="editComposition" name="composition" rows="2"
                                        placeholder="Press F6 to add compositions" onkeydown="handleCompositionInputKeydown(event)"></textarea>
                                    <input type="hidden" id="editCompositionIds" name="compositionIds">
                                </div>
                                <div class="form-group row">
                                    <div class="col">
                                        <label for="editMainUnit">Main Unit<i style="color: red;">*</i></label>
                                        <select class="form-control" id="editMainUnit" name="mainUnit"
                                            onfocus="selectValue(this)" required>
                                            <% if (mainUnits && mainUnits.length> 0) { %>
                                                <% mainUnits.forEach(mainUnit=> { %>
                                                    <option value="<%= mainUnit._id %>">
                                                        <%= mainUnit.name %>
                                                    </option>
                                                    <% }); %>
                                                        <% } else { %>
                                                            <option disabled>No main units available</option>
                                                            <% } %>
                                        </select>
                                    </div>
                                    <div class="col">
                                        <label for="editWsUnit">WS Unit</label>
                                        <input type="number" class="form-control" id="editWsUnit" name="WSUnit"
                                            autofocus autocomplete="off" onfocus="selectValue(this)">
                                    </div>
                                    <div class="col">
                                        <label for="editUnit">Unit <i style="color: red;">*</i></label>
                                        <select class="form-control" id="editUnit" name="unit"
                                            onfocus="selectValue(this)" required>
                                            <% if (units && units.length> 0) { %>
                                                <% units.forEach(unit=> { %>
                                                    <option value="<%= unit._id %>">
                                                        <%= unit.name %>
                                                    </option>
                                                    <% }); %>
                                                        <% } else { %>
                                                            <option disabled>No units available</option>
                                                            <% } %>
                                        </select>
                                    </div>
                                    <div class="col">
                                        <label for="editVatStatus">VAT<i style="color: red;">*</i></label>
                                        <select class="form-control" id="editVatStatus" name="vatStatus"
                                            onfocus="selectValue(this)" required>
                                            <% if (vatEnabled) {%>
                                                <option value="vatable">Vatable</option>
                                                <%}%>
                                                    <option value="vatExempt">VAT Exempt</option>
                                        </select>
                                    </div>
                                    <div class="col">
                                        <label for="editReorderLevel">Re-Order(Qty)</label>
                                        <input type="number" class="form-control" id="editReorderLevel"
                                            name="reorderLevel" onfocus="selectValue(this)" autocomplete="off">
                                    </div>
                                </div>
                                <div class="form-group row">

                                    <div class="col">
                                        <label for="editPrice">Sales Price</label>
                                        <input type="number" class="form-control" id="editPrice" name="price"
                                            value="0.00" step="any" onfocus="selectValue(this)" autocomplete="off">
                                    </div>
                                    <div class="col">
                                        <label for="editpuPrice">Purchase Price</label>
                                        <input type="number" class="form-control" id="editpuPrice" name="puPrice"
                                            oninput="calculateTotalOpeningStockBalanceInEditForm()" value="0.00"
                                            step="any" onfocus="selectValue(this)" autocomplete="off">
                                    </div>

                                    <div class="col">
                                        <label for="editOpeningStock">Op. stock</label>
                                        <input type="number" class="form-control" id="editOpeningStock"
                                            name="openingStock" value="0.00"
                                            oninput="calculateTotalOpeningStockBalanceInEditForm()"
                                            onfocus="selectValue(this)" autocomplete="off">
                                    </div>
                                    <div class="col">
                                        <label for="editOpeningStockBalance">Op. Stock Value</label>
                                        <input type="number" class="form-control" id="editOpeningStockBalance"
                                            name="openingStockBalance" value="0.00" step="any"
                                            onfocus="selectValue(this)" autocomplete="off">
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary">Save changes</button>
                                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="compositionModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Select Compositions</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                        aria-label="Close"></button>
                </div>
                <div class="modal-body p-0">
                    <div class="sticky-top p-3 bg-light">
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-search"></i></span>
                            <input type="text" id="searchComposition" class="form-control"
                                placeholder="Search compositions..." autofocus autocomplete="off">
                        </div>
                    </div>
                    <div class="overflow-auto" style="max-height: 60vh;">
                        <ul id="compositionList" class="list-group list-group-flush">
                            <!-- Compositions will be loaded here -->
                        </ul>
                    </div>
                </div>
                <div class="modal-footer">
                    <small class="text-muted me-auto">
                        Selected: <span class="badge bg-primary" id="selectedCount">0</span>
                    </small>
                    <div class="form-check form-check-inline ms-2">
                        <input class="form-check-input" type="checkbox" id="selectAllCompositions">
                        <label class="form-check-label" for="selectAllCompositions">Select All</label>
                    </div>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Done</button>
                </div>
            </div>
        </div>
    </div>

<!-- Add this modal for print options -->
<div class="modal fade" id="printOptionsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title"><i class="fas fa-print me-2"></i>Print Options</h5>
                <button type="button" class="close text-white" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="printOptionsForm">
                    <div class="form-group">
                        <label class="mb-3 fw-bold">Select Print Option:</label>
                        
                        <div class="form-check mb-3 p-3 border rounded bg-light-hover">
                            <input class="form-check-input" type="radio" name="printOption" id="printAll" value="all" checked autofocus>
                            <label class="form-check-label d-flex align-items-center" for="printAll">
                                <span class="option-icon me-3"><i class="fas fa-layer-group"></i></span>
                                <div>
                                    <strong>All Items</strong>
                                    <p class="mb-0 small text-muted">Print all items in your inventory</p>
                                </div>
                            </label>
                        </div>
                        
                        <div class="form-check mb-3 p-3 border rounded bg-light-hover">
                            <input class="form-check-input" type="radio" name="printOption" id="printActive" value="active">
                            <label class="form-check-label d-flex align-items-center" for="printActive">
                                <span class="option-icon me-3"><i class="fas fa-check-circle"></i></span>
                                <div>
                                    <strong>Active Items Only</strong>
                                    <p class="mb-0 small text-muted">Print only active inventory items</p>
                                </div>
                            </label>
                        </div>
                        
                        <div class="form-check mb-3 p-3 border rounded bg-light-hover">
                            <input class="form-check-input" type="radio" name="printOption" id="printVatable" value="vatable">
                            <label class="form-check-label d-flex align-items-center" for="printVatable">
                                <span class="option-icon me-3"><i class="fas fa-percentage"></i></span>
                                <div>
                                    <strong>Vatable Items Only</strong>
                                    <p class="mb-0 small text-muted">Print items subject to VAT</p>
                                </div>
                            </label>
                        </div>
                        
                        <div class="form-check mb-3 p-3 border rounded bg-light-hover">
                            <input class="form-check-input" type="radio" name="printOption" id="printExempt" value="vatExempt">
                            <label class="form-check-label d-flex align-items-center" for="printExempt">
                                <span class="option-icon me-3"><i class="fas fa-ban"></i></span>
                                <div>
                                    <strong>VAT Exempt Items Only</strong>
                                    <p class="mb-0 small text-muted">Print VAT-exempt items</p>
                                </div>
                            </label>
                        </div>
                        
                        <div class="form-check mb-3 p-3 border rounded bg-light-hover">
                            <input class="form-check-input" type="radio" name="printOption" id="printCategory" value="category">
                            <label class="form-check-label d-flex align-items-center" for="printCategory">
                                <span class="option-icon me-3"><i class="fas fa-folder"></i></span>
                                <div>
                                    <strong>Category Wise</strong>
                                    <p class="mb-0 small text-muted">Print items from a specific category</p>
                                </div>
                            </label>
                        </div>

                            <!-- Category selector (hidden by default) -->
                    <div class="category-selector card p-3 mt-3" id="categorySelector" style="display: none;">
                        <label for="printCategorySelect" class="fw-bold mb-2"><i class="fas fa-filter me-2"></i>Select Category:</label>
                        <select class="form-select" id="printCategorySelect">
                            <% categories.forEach(category=> { %>
                                <option value="<%= category._id %>"><%= category.name %></option>
                            <% }); %>
                        </select>
                    </div>

                          <div class="form-check mb-3 p-3 border rounded bg-light-hover">
                            <input class="form-check-input" type="radio" name="printOption" id="printCompany" value="itemsCompany">
                            <label class="form-check-label d-flex align-items-center" for="printCompany">
                                <span class="option-icon me-3"><i class="fas fa-folder"></i></span>
                                <div>
                                    <strong>Company Wise</strong>
                                    <p class="mb-0 small text-muted">Print items from a specific company</p>
                                </div>
                            </label>
                        </div>
                    </div>

                       <!-- Company selector (hidden by default) -->
                    <div class="company-selector card p-3 mt-3" id="companySelector" style="display: none;">
                        <label for="printCompanySelect" class="fw-bold mb-2"><i class="fas fa-filter me-2"></i>Select Company:</label>
                        <select class="form-select" id="printCompanySelect">
                            <% itemsCompanies.forEach(company=> { %>
                                <option value="<%= company._id %>"><%= company.name %></option>
                            <% }); %>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Cancel
                </button>
                <button type="button" class="btn btn-primary" id="confirmPrint">
                    <i class="fas fa-print me-2"></i>Print
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Add this modal for save confirmation -->
<div class="modal fade" id="saveConfirmationModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title"><i class="fas fa-save me-2"></i>Confirm Save</h5>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to save this item?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelSaveButton" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmSaveButton">Save</button>
            </div>
        </div>
    </div>
</div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        function selectItem(name, hscode, categoryId,itemsCompany, compositionNames, compositionIds, mainUnitId, WSUnit, unitId, vatStatus, reorderLevel, price, puPrice, openingStock, openingStockBalance) {
            // Populate the form fields with the selected item data
            document.getElementById('searchValue').value = name;
            document.getElementById('hscode').value = hscode;
            document.getElementById('category').value = categoryId;
            document.getElementById('itemsCompany').value = itemsCompany;
            // Set composition values
    document.getElementById('editComposition').value = compositionNames;
    document.getElementById('compositionIds').value = compositionIds;
            document.getElementById('mainUnit').value = mainUnitId;
            document.getElementById('WSUnit').value = WSUnit;
            document.getElementById('unit').value = unitId;
            document.getElementById('vatStatus').value = vatStatus;
            document.getElementById('reorderLevel').value = reorderLevel;
            document.getElementById('price').value = price;
            document.getElementById('puPrice').value = puPrice;
        }
    </script>

    <style>
        .back-button {
            background-color: #007bff;
            /* Blue background */
            color: white;
            /* White text */
            border: none;
            /* No border */
            padding: 5px 10px;
            /* Padding */
            font-size: 16px;
            /* Font size */
            cursor: pointer;
            /* Pointer cursor on hover */
            border-radius: 5px;
            /* Rounded corners */
            display: flex;
            align-items: center;
            gap: 8px;
            /* Space between icon and text */
        }

        .back-button:hover {
            background-color: #0056b3;
            /* Darker blue on hover */
        }

        .icon {
            font-size: 20px;
            /* Icon size */
        }
    </style>

    <script>
        document.getElementById('backButton').addEventListener('click', function () {
            // Navigate back twice to skip the success message page
            window.history.go(-1);
        });
    </script>

    <script>

        function selectValue(input) {
            input.select(); // Select the value of the input field when it is focused
        }

        function editItem(id, name, hscode, categoryId,itemsCompany,compositionNames, compositionIds, mainUnitId, WSUnitId, unitId, vatStatus, reorderLevel, price, puPrice, openingStock, openingStockBalance) {
            $('#editItemModal').modal('show');
            $('#editItemForm').attr('action', '/items/' + id + '?_method=PUT');
            $('#editName').val(name);
            $('#editHscode').val(hscode);
            $('#editCategory').val(categoryId);
            $('#editItemsCompany').val(itemsCompany);
            // Set composition values
    $('#editComposition').val(compositionNames);
    $('#editCompositionIds').val(compositionIds);
            $('#editMainUnit').val(mainUnitId);
            $('#editWsUnit').val(WSUnitId);
            $('#editUnit').val(unitId);
            $('#editVatStatus').val(vatStatus);
            $('#editReorderLevel').val(reorderLevel);
            $('#editPrice').val(price);
            $('#editpuPrice').val(puPrice);
            $('#editOpeningStock').val(openingStock);
            $('#editOpeningStockBalance').val(openingStockBalance);

            // Set composition values
            $('#editComposition').val(compositionNames);
            $('#editCompositionIds').val(compositionIds);

            // Initialize composition modal for this form
            // initCompositionModal('#editComposition', '#editCompositionIds');
        }

        $(document).ready(function () {
            $('#editItemModal').on('hidden.bs.modal', function () {
                $('#editItemForm').trigger('reset');
                $('#editItemForm').attr('action', '');
            });
        });

        document.getElementById('searchInput').addEventListener('input', function () {
            const searchTerm = this.value.toLowerCase();
            const itemsList = document.querySelectorAll('.searchClass');
            let hasResults = false;

            itemsList.forEach(item => {
                const itemName = item.querySelector('td strong').textContent.toLowerCase();
                if (itemName.includes(searchTerm)) {
                    item.style.display = '';
                    hasResults = true;
                } else {
                    item.style.display = 'none';
                }
            });

            // Handle "No items found" row
            let noItemsRow = document.getElementById('noItemsRow');

            if (!hasResults) {
                if (!noItemsRow) {
                    noItemsRow = document.createElement('tr');
                    noItemsRow.id = 'noItemsRow';
                    noItemsRow.innerHTML = `<td colspan="6" class="text-center"><strong>No items found</strong></td>`;
                    document.getElementById('itemsList').appendChild(noItemsRow);
                }
            } else {
                if (noItemsRow) {
                    noItemsRow.remove(); // Remove "No items found" if results exist
                }
            }
        });


        document.getElementById('searchValue').addEventListener('input', function () {
            const searchTerm = this.value.toLowerCase();
            const itemsList = document.querySelectorAll('.searchClass');
            let hasResults = false;

            itemsList.forEach(item => {
                const itemName = item.querySelector('td strong').textContent.toLowerCase();
                if (itemName.includes(searchTerm)) {
                    item.style.display = '';
                    hasResults = true;
                } else {
                    item.style.display = 'none';
                }
            });
            // Handle "No items found" row
            let noItemsRow = document.getElementById('noItemsRow');

            if (!hasResults) {
                if (!noItemsRow) {
                    noItemsRow = document.createElement('tr');
                    noItemsRow.id = 'noItemsRow';
                    noItemsRow.innerHTML = `<td colspan="6" class="text-center"><strong>No items found</strong></td>`;
                    document.getElementById('itemsList').appendChild(noItemsRow);
                }
            } else {
                if (noItemsRow) {
                    noItemsRow.remove(); // Remove "No items found" if results exist
                }
            }
        });

        //Handle step by step going when enter key is press
        document.addEventListener('DOMContentLoaded', function () {
            const itemNameInput = document.getElementById('name'); // Initial focus on item search input
        });

        // Function to move focus to the next input field
        function moveToNextInput(event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Prevent form submission
                const form = event.target.form;
                const index = Array.prototype.indexOf.call(form, event.target);
                form.elements[index + 1].focus();
            }
        }

        // Get all the input elements within the form
        const inputs = document.querySelectorAll('form input, form select');

        // Attach the moveToNextInput function to the keydown event for each input field
        inputs.forEach(input => {
            input.addEventListener('keydown', moveToNextInput);
        });

        //calculate openingStockBalance
        function calculateTotalOpeningStockBalance(input) {
            const puPrice = parseFloat(document.getElementById('puPrice').value) || 0;
            const openingStock = parseFloat(document.getElementById('openingStock').value) || 0;

            const totalOpeningStockBalance = puPrice * openingStock;

            // Update the Opening Stock Balance field
            document.getElementById('openingStockBalance').value = totalOpeningStockBalance.toFixed(2);
        }

        function calculateTotalOpeningStockBalanceInEditForm(input) {
            const puPrice = parseFloat(document.getElementById('editpuPrice').value) || 0.00;
            const openingStock = parseFloat(document.getElementById('editOpeningStock').value) || 0.00;

            const totalOpeningStockBalance = puPrice * openingStock;

            // Update the Opening Stock Balance field
            document.getElementById('editOpeningStockBalance').value = totalOpeningStockBalance.toFixed(2);
        }

        // Function to print the list of accounts in table format
        // function printItems() {
        //     // Create a table structure for printing
        //     let printContent = `
        //     <table border="1" cellpadding="10" cellspacing="0" style="width: 100%; border-collapse: collapse;">
        //         <thead>
        //             <tr>
        //                 <th>S.N.</th> <!-- Serial Number Column -->
        //                 <th>Description of Goods</th>
        //                 <th>Category</th>
        //                 <th>Unit</th>
        //                 <th>VAT</th>
        //             </tr>
        //         </thead>
        //         <tbody>`;

        // <% items.forEach((item, index) => { %>
        //         printContent += `
        //         <tr>
        //             <td><%= index + 1 %></td> <!-- Serial Number for Printing -->
        //             <td><%= item.name %></td>
        //             <td><%= item.category.name%></td>
        //             <td><%= item.unit.name%></td>
        //             <% if(item.vatStatus==='vatable'){%>
        //             <td>13%</td>
        //             <%} else if(item.vatStatus==='vatExempt') {%>
        //             <td>Exempt</td>
        //             <%} else{%>
        //             <td>Null</td>
        //             <%}%>
        //         </tr>`;
        // <% }); %>

        //         printContent += `</tbody></table>`;

        //     // Temporarily replace body content with the table for printing
        //     const originalContent = document.body.innerHTML;
        //     document.body.innerHTML = `
        //     <html>
        //     <head>
        //         <title>Print Accounts</title>
        //         <style>
        //             table {
        //                 width: 100%;
        //                 border-collapse: collapse;
        //             }
        //             th, td {
        //                 padding: 8px;
        //                 text-align: left;
        //                 border: 1px solid #ddd;
        //             }
        //         </style>
        //     </head>
        //     <body>
        //         <h2 class="card-subtitle mb-2 text-center">
        //                     <%= currentCompanyName %>
        //                 </h2>
        //         <h2 class="text-center">Items List</h2>
        //         ${printContent}
        //     </body>
        //     </html>
        // `;

        //     // Trigger the print dialog
        //     window.print();

        //     // Restore the original content after printing
        //     document.body.innerHTML = originalContent;
        //     window.location.reload();  // Reload the page to restore event listeners
        // }

    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax/3.2.6/jquery.ajax.min.js"></script>

    <script>
        $(document).ready(function () {
            // Create a reusable composition modal controller
            function CompositionModalController(textareaSelector, hiddenFieldSelector) {
                let allCompositions = [];
                let selectedCompositions = [];
                const $compositionInput = $(textareaSelector);
                const $compositionIdsInput = $(hiddenFieldSelector);
                const $compositionModal = $("#compositionModal");
                const $searchInput = $("#searchComposition");
                const $compositionList = $("#compositionList");
                const $selectedCount = $("#selectedCount");

                // Initialize modal for this controller
                function init() {
                    // Fetch compositions when modal opens
                    $compositionModal.on('show.bs.modal', function () {
                        fetchCompositions();
                        // Clear search when modal opens
                        $searchInput.val('');
                    });

                    // Initialize existing values
                    initExistingCompositions();
                }

                // Fetch compositions using AJAX
                function fetchCompositions() {
                    $.ajax({
                        url: "/api/compositions",
                        method: "GET",
                        dataType: "json",
                        beforeSend: function () {
                            $compositionList.html('<li class="list-group-item">Loading compositions...</li>');
                        },
                        success: function (data) {
                            if (data && data.length) {
                                allCompositions = data;
                                renderCompositions();
                            } else {
                                $compositionList.html('<li class="list-group-item text-muted">No compositions available</li>');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX Error:", status, error);
                            $compositionList.html(
                                '<li class="list-group-item text-danger">Error loading compositions. Please try again.</li>'
                            );
                        }
                    });
                }

                // Render compositions with checkboxes
                function renderCompositions(filtered = allCompositions) {
                    $compositionList.empty();

                    if (filtered.length === 0) {
                        $compositionList.html('<li class="list-group-item text-muted">No matching compositions found</li>');
                        return;
                    }

                    filtered.forEach(composition => {
                        const isSelected = selectedCompositions.some(c => c._id === composition._id);
                        $compositionList.append(`
                    <li class="list-group-item composition-item ${isSelected ? 'active' : ''}" 
                        data-id="${composition._id}">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" 
                                ${isSelected ? 'checked' : ''}>
                            <label class="form-check-label">
                                ${composition.uniqueNumber || 'N/A'} - ${composition.name}
                            </label>
                        </div>
                    </li>
                `);
                    });
                }

                // Handle composition selection
                $(document).on('change', '.composition-item input[type="checkbox"]', function () {
                    const compositionId = $(this).closest('.composition-item').data('id');
                    const composition = allCompositions.find(c => c._id === compositionId);

                    if ($(this).is(':checked')) {
                        if (!selectedCompositions.some(c => c._id === compositionId)) {
                            selectedCompositions.push(composition);
                        }
                    } else {
                        selectedCompositions = selectedCompositions.filter(c => c._id !== compositionId);
                    }

                    updateCompositionTextarea();
                });

                // Select all compositions
                $('#selectAllCompositions').change(function () {
                    const isChecked = $(this).is(':checked');
                    $('.composition-item input[type="checkbox"]').prop('checked', isChecked).trigger('change');
                });

                // Update textarea with selected compositions
                function updateCompositionTextarea() {
                    $compositionInput.val(selectedCompositions.map(c => c.name).join(', '));
                    $compositionIdsInput.val(selectedCompositions.map(c => c._id).join(','));
                    $selectedCount.text(selectedCompositions.length);
                }

                // Search functionality
                $searchInput.on('input', function () {
                    const searchTerm = $(this).val().toLowerCase();
                    const filtered = allCompositions.filter(c =>
                        c.name.toLowerCase().includes(searchTerm) ||
                        (c.uniqueNumber && c.uniqueNumber.toString().includes(searchTerm))
                    );
                    renderCompositions(filtered);
                });

                // Initialize existing values if editing
                function initExistingCompositions() {
                    const existingIds = $compositionIdsInput.val().trim();
                    if (existingIds) {
                        const ids = existingIds.split(',').map(id => id.trim());
                        selectedCompositions = allCompositions.filter(c =>
                            ids.includes(c._id.toString())
                        );
                        $compositionInput.val(selectedCompositions.map(c => c.name).join(', '));
                        $selectedCount.text(selectedCompositions.length);
                    }
                }

                // Public method to set selected compositions
                this.setSelectedCompositions = function (compositionNames, compositionIds) {
                    $compositionInput.val(compositionNames);
                    $compositionIdsInput.val(compositionIds);
                    initExistingCompositions();
                };

                // Initialize this controller
                init();
            }

            // Initialize controllers for both forms
            const addFormController = new CompositionModalController("#composition", "#compositionIds");
            const editFormController = new CompositionModalController("#editComposition", "#editCompositionIds");

            // Open modal on F6 key for the currently focused composition field
            $(document).on('keydown', function (e) {
                if (e.key === 'F6' && !$("#compositionModal").is(':visible')) {
                    e.preventDefault();
                    const focusedElement = document.activeElement;
                    if (focusedElement && (focusedElement.id === 'composition' || focusedElement.id === 'editComposition')) {
                        $("#compositionModal").modal('show');
                    }
                }
            });

            // When Done button is clicked, focus back to the composition field that opened the modal
            $("#compositionModal").on('hidden.bs.modal', function () {
                const lastFocused = $(this).data('lastFocused');
                if (lastFocused) {
                    $(lastFocused).focus();
                }
            });

            // Track which composition field opened the modal
            $("#composition, #editComposition").on('focus', function () {
                $("#compositionModal").data('lastFocused', this);
            });
        });
    </script>

    <script>
        function handleCompositionInputKeydown(event) {
    if (event.key === 'Enter') {
        const mainUnit = document.getElementById('mainUnit');
        mainUnit.focus();
        mainUnit.select();
    }
}

    </script>

    <script>
    // Add this script to handle print options
    $(document).ready(function() {
        $('#printOptionsModal').on('shown.bs.modal', function () {
            $('#printAll').focus();
        });
        
        // Show/hide selectors based on radio selection
        $('input[name="printOption"]').change(function() {
            const option = $(this).val();
            if (option === 'category') {
                $('#categorySelector').show();
                $('#companySelector').hide();
            } 
            else if (option === 'itemsCompany') {
                $('#companySelector').show();
                $('#categorySelector').hide();
            } 
            else {
                $('#categorySelector').hide();
                $('#companySelector').hide();
            }
        });

        // Handle print confirmation
        $('#confirmPrint').click(function() {
            const option = $('input[name="printOption"]:checked').val();
            let id = null;
            
            if (option === 'category') {
                id = $('#printCategorySelect').val();
            } 
            else if (option === 'itemsCompany') {
                id = $('#printCompanySelect').val();
            }
            
            printItems(option, id);
            $('#printOptionsModal').modal('hide');
        });
    });

    // Modified printItems function with filtering
    function printItems(option = 'all', id = null) {
        // Filter items based on selected option
        const allCompanies = allitemsCompanies || [];
        let itemsToPrint = [...allItems]; // Clone the array
        
        switch(option) {
            case 'active':
                itemsToPrint = itemsToPrint.filter(item => item.status === 'active');
                break;
            case 'vatable':
                itemsToPrint = itemsToPrint.filter(item => item.vatStatus === 'vatable');
                break;
            case 'vatExempt':
                itemsToPrint = itemsToPrint.filter(item => item.vatStatus === 'vatExempt');
                break;
            case 'category':
                itemsToPrint = itemsToPrint.filter(item => item.category._id === id);
                break;
            case 'itemsCompany':
                // CORRECTED: Use id parameter and proper property name
                itemsToPrint = itemsToPrint.filter(item => item.itemsCompany && item.itemsCompany._id === id);
                break;
            // 'all' prints everything
        }

        // Create a table structure for printing
        let printContent = `
            <table border="1" cellpadding="10" cellspacing="0" style="width: 100%; border-collapse: collapse;">
                <thead>
                    <tr>
                        <th>S.N.</th>
                        <th>Description of Goods</th>
                        <th>Company</th>
                        <th>Category</th>
                        <th>Unit</th>
                        <th>VAT</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>`;

        itemsToPrint.forEach((item, index) => {
            // CORRECTED: Use itemsCompany.name instead of company.name
            printContent += `
                <tr>
                    <td>${index + 1}</td>
                    <td>${item.name}</td>
                    <td>${item.itemsCompany ? item.itemsCompany.name : ''}</td>
                    <td>${item.category ? item.category.name : ''}</td>
                    <td>${item.unit ? item.unit.name : ''}</td>
                    <td>${item.vatStatus === 'vatable' ? '13%' : 'Exempt'}</td>
                    <td>${item.status}</td>
                </tr>`;
        });

        printContent += `</tbody></table>`;

        // Helper function to generate print title based on options
        function getPrintTitle(option, id) {
            switch(option) {
                case 'active':
                    return 'Active Items Only';
                case 'vatable':
                    return 'Vatable Items Only';
                case 'vatExempt':
                    return 'VAT Exempt Items Only';
                case 'category':
                    const category = allCategories.find(c => c._id === id);
                    return `Category: ${category ? category.name : 'Selected Category'}`;
                case 'itemsCompany':
                    // CORRECTED: Use allitemsCompanies array
                    const company = allitemsCompanies.find(c => c._id === id);
                    return `Company: ${company ? company.name : 'Selected Company'}`;
                default:
                    return 'All Items';
            }
        }

        const title = getPrintTitle(option, id);

        // Temporarily replace body content with the table for printing
        const originalContent = document.body.innerHTML;
        document.body.innerHTML = `
            <html>
            <head>
                <title>Print Items</title>
                <style>
                    table {
                        width: 100%;
                        border-collapse: collapse;
                        font-family: Arial, sans-serif;
                    }
                    th, td {
                        padding: 8px;
                        text-align: left;
                        border: 1px solid #ddd;
                    }
                    th {
                        background-color: #f2f2f2;
                        font-weight: bold;
                    }
                    h2, h4 {
                        text-align: center;
                        margin: 10px 0;
                    }
                </style>
            </head>
            <body>
                <h2>Items List</h2>
                <h4>${title}</h4>
                ${printContent}
                <p style="text-align: center; margin-top: 20px; font-size: 12px;">
                    Printed on ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}
                </p>
            </body>
            </html>
        `;

        // Trigger the print dialog
        window.print();

        // Restore the original content after printing
        document.body.innerHTML = originalContent;
        window.location.reload();  // Reload the page to restore event listeners

        const company = allCompanies.find(c => c._id === id);
    }
</script>

<script>
    // Add Alt+S shortcut handler
    document.addEventListener('keydown', function(e) {
        
        // Check for Alt+S
        if (e.altKey && e.key.toLowerCase() === 's') {
            e.preventDefault();
            
            // Check which form is active
            const isEditModalOpen = $('#editItemModal').hasClass('show');
            
            // Store the form type
            $('#saveConfirmationModal').data('formType', isEditModalOpen ? 'edit' : 'add');
            
            // Show confirmation modal
            $('#saveConfirmationModal').modal('show');
        }
    });

    // Focus the save button when confirmation modal appears
    $('#saveConfirmationModal').on('shown.bs.modal', function() {
        $('#confirmSaveButton').focus();
    });

    // Handle save confirmation
    $('#confirmSaveButton').click(function() {
        const formType = $('#saveConfirmationModal').data('formType');
        
        if (formType === 'edit') {
            $('#editItemForm').submit();
        } else {
            document.querySelector('form.wow-form').submit();
        }
        
        $('#saveConfirmationModal').modal('hide');
    });

    // Add keyboard navigation for buttons
    $('#saveConfirmationModal').on('keydown', function(e) {
        const confirmButton = document.getElementById('confirmSaveButton');
        const cancelButton = document.getElementById('cancelSaveButton');
        
        // Enter key submits form
        if (e.key === 'Enter') {
            e.preventDefault();
            if (document.activeElement === confirmButton) {
                confirmButton.click();
            } else if (document.activeElement === cancelButton) {
                cancelButton.click();
            }
        }
        
        // Arrow key navigation
        if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {
            e.preventDefault();
            
            if (document.activeElement === confirmButton) {
                cancelButton.focus();
            } else if (document.activeElement === cancelButton) {
                confirmButton.focus();
            }
        }
    });

    // Add ID to the add item form
    document.querySelector('form.wow-form').id = 'addItemForm';
</script>

<!-- Add this CSS for better modal styling -->
<style>
    #printOptionsModal .modal-content {
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    }
    
    #printOptionsModal .modal-header {
        background-color: #4e73df;
        color: white;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
    }
    
    #printOptionsModal .close {
        color: white;
        opacity: 1;
    }
    
    #printOptionsModal .modal-footer {
        border-top: 1px solid #e9ecef;
    }
    
    #printOptionsModal .form-check {
        margin-bottom: 10px;
    }
</style>
